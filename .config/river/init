#!/bin/sh

# This is the example configuration file for river.
#
# If you wish to edit this, you will probably want to copy it to
# $XDG_CONFIG_HOME/river/init or $HOME/.config/river/init first.
#
# See the river(1), riverctl(1), and rivertile(1) man pages for complete
# documentation.
export menu="bemenu-run -p 'Run: '"
export terminal="footclient"
export browser="$BROWSER"

# Note: the "Super" modifier is also known as Logo, GUI, Windows, Mod4, etc.

if command -v dbus-update-activation-environment >dev/null && [ -n "${DBUS_SESSION_BUS_ADDRESS}" ]; then
  dbus-update-activation-environment WAYLAND_DISPLAY
fi

riverctl spawn 'pipewire'
riverctl spawn 'mako'
riverctl spawn 'foot --server'
riverctl spawn 'swaybg -i "$HOME/.local/share/bg"'

# clipman
wl-paste -p -t text --watch clipman store --histpath="~/.local/share/clipman-primary.json" &

riverctl spawn 'someblocks -m 1 | awk "{print \"all \" \$0; fflush();}" | sandbar -font "monospace:size=13"'

# xdg-desktop-portals in river
# . ~/.config/river/config/autostart

# Super+0 to focus all tags
# Super+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal Super 0 set-focused-tags $all_tags
riverctl map normal Super+Shift 0 set-view-tags $all_tags

riverctl map -repeat normal Super Minus spawn "pamixer -d 5"
riverctl map -repeat normal Super+Shift Minus spawn "pamixer -d 15"
riverctl map -repeat normal Super Equal spawn "pamixer -i 5"
riverctl map -repeat normal Super+Shift Equal spawn "pamixer -i 15"

riverctl map normal Super Backspace spawn "sysact"
riverctl map normal Super+Shift Backspace spawn "sysact"

riverctl map normal Super Tab focus-previous-tags
riverctl map normal Super+Shift Tab focus-view previous

riverctl map normal Super Q close      # Super+Q to close the focused view
riverctl map normal Super+Shift Q exit # Super+Shift+E to exit river

riverctl map normal Super W spawn "org.mozilla.firefox"
riverctl map normal Super+Shift W spawn "networkmanager_dmenu"

riverctl map normal Super R spawn "$terminal -e lf"
riverctl map normal Super+Shift R spawn "$terminal -e htop"

riverctl map normal Super P spawn "mpc toggle"
riverctl map normal Super+Shift P spawn "mpc pause; pauseallmpv"
riverctl map normal Super Bracketleft spawn "mpc seek -10"
riverctl map normal Super+Shift Bracketleft spawn "mpc seek -60"
riverctl map normal Super Bracketright spawn "mpc seek +10"
riverctl map normal Super+Shift Bracketright spawn "mpc seek +60"
# riverctl map normal Super  Backslash spawn "mpc seek +60"

# { MODKEY,			XK_a,		togglegaps,	{0} },
# { MODKEY|ShiftMask,		XK_a,		defaultgaps,	{0} },
# { MODKEY,			XK_s,		togglesticky,	{0} },

riverctl map normal Super D spawn "$menu"
riverctl map normal Super F toggle-fullscreen # Super+F to toggle fullscreen
# { MODKEY|ShiftMask,		XK_f,		setlayout,	{.v = &layouts[8]} },

# { MODKEY,			XK_g,		shiftview,	{ .i = -1 } },
# { MODKEY|ShiftMask,		XK_g,		shifttag,	{ .i = -1 } },

# Super+J and Super+K to focus the next/previous view in the layout stack
riverctl map normal Super J focus-view next
riverctl map normal Super K focus-view previous

# Super+TERMINALH and Super+L to decrease/increase the main ratio of rivertile(1)
riverctl map normal Super H send-layout-cmd rivertile "main-ratio -0.05"
riverctl map normal Super L send-layout-cmd rivertile "main-ratio +0.05"

# Super+Shift+J and Super+Shift+K to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal Super+Shift J swap next
riverctl map normal Super+Shift K swap previous

# Super+Shift+H and Super+Shift+L to increment/decrement the main count of rivertile(1)
riverctl map normal Super+Shift H send-layout-cmd rivertile "main-count +1"
riverctl map normal Super+Shift L send-layout-cmd rivertile "main-count -1"

# { MODKEY,			XK_semicolon,	shiftview,	{ .i = 1 } },
# { MODKEY|ShiftMask,		XK_semicolon,	shifttag,	{ .i = 1 } },
# { MODKEY|ShiftMask,		XK_apostrophe,	togglesmartgaps,	{0} },

riverctl map normal Super Return spawn "$terminal --app-id terminal"
# riverctl map normal Super+Shift Return spawn "$terminal"

# { MODKEY,			XK_z,		incrgaps,	{.i = +3 } },
# { MODKEY,			XK_x,		incrgaps,	{.i = -3 } },
# { MODKEY,			XK_c,		spawn,		{.v = (const char*[]){ TERMINAL, "-e", "profanity", NULL } } },

riverctl map normal Super N spawn "$terminal -e newsboat"
riverctl map normal Super M spawn "$terminal -e ncmpcpp"
riverctl map normal Super+Shift M spawn "pamixer --toggle-mute"

riverctl map normal Super Comma spawn spawn "mpc prev"
riverctl map normal Super+Shift Comma spawn "mpc seek '0%'"
riverctl map normal Super Period spawn "mpc next"
riverctl map normal Super+Shift Period spawn "mpc repeat"

# { MODKEY,			XK_Left,	focusmon,	{.i = -1 } },
# { MODKEY|ShiftMask,		XK_Left,	tagmon,		{.i = -1 } },
# { MODKEY,			XK_Right,	focusmon,	{.i = +1 } },
# { MODKEY|ShiftMask,		XK_Right,	tagmon,		{.i = +1 } },
#
# { MODKEY,			XK_Page_Up,	shiftview,	{ .i = -1 } },
# { MODKEY|ShiftMask,		XK_Page_Up,	shifttag,	{ .i = -1 } },
# { MODKEY,			XK_Page_Down,	shiftview,	{ .i = +1 } },
# { MODKEY|ShiftMask,		XK_Page_Down,	shifttag,	{ .i = +1 } },

riverctl map normal None F1 spawn "$terminal -e pulsemixer"
riverctl map normal None F2 spawn "$terminal -e pulsemixer"
riverctl map normal None F3 spawn "$terminal -e pulsemixer"
riverctl map normal None F4 spawn "$terminal -e pulsemixer"
riverctl map normal None F5 spawn "$terminal -e pulsemixer"
riverctl map normal None F6 spawn "torwrap"
riverctl map normal None F7 spawn "td-toggle"
riverctl map normal None F8 spawn "mailsync"
riverctl map normal None F9 spawn "mounter"
riverctl map normal None F10 spawn "unmounter"
riverctl map normal None F11 spawn "mpv --untimed --no-cache --no-osc --no-input-default-bindings --profile=low-latency --input-conf=/dev/null --title=webcam $(ls /dev/video[0,2,4,6,8] | tail -n 1)"
riverctl map normal None F12 spawn "remaps"

# { MODKEY,			XK_F1,		spawn,		SHCMD("groff -mom /usr/local/share/dwm/larbs.mom -Tpdf | zathura -") },
# { MODKEY,			XK_F2,		spawn,		{.v = (const char*[]){ "tutorialvids", NULL } } },
# { MODKEY,			XK_F3,		spawn,		{.v = (const char*[]){ "displayselect", NULL } } },
# { MODKEY,			XK_F4,		spawn,		SHCMD(TERMINAL " -e pulsemixer; kill -44 $(pidof dwmblocks)") },
# { MODKEY,			XK_F5,		xrdb,		{.v = NULL } },
# { MODKEY,			XK_F6,		spawn,		{.v = (const char*[]){ "torwrap", NULL } } },
# { MODKEY,			XK_F7,		spawn,		{.v = (const char*[]){ "td-toggle", NULL } } },
# { MODKEY,			XK_F8,		spawn,		{.v = (const char*[]){ "mailsync", NULL } } },
# { MODKEY,			XK_F9,		spawn,		{.v = (const char*[]){ "mounter", NULL } } },
# { MODKEY,			XK_F10,		spawn,		{.v = (const char*[]){ "unmounter", NULL } } },
# { MODKEY,			XK_F11,		spawn,		SHCMD("") },
# { MODKEY,			XK_F12,		spawn,		SHCMD("remaps") },
# { MODKEY,			XK_space,	zoom,		{0} },
# { MODKEY|ShiftMask,		XK_space,	togglefloating,	{0} },
#
#
riverctl map normal Super+Shift Space toggle-float # Super+Shift+Space to toggle float
riverctl map normal Super Space zoom               # Super+Space to bump the focused view to the top of the layout stack

#
# Screenshots bindings
#
riverctl map normal None Print spawn 'grim -g "$(slurp)" - | swappy -f -' # Screenshot area to swappy
riverctl map normal None Alt+Print spawn 'grim -g "$(slurp)" - | wl-copy' # Screenshot area to clipboard only
riverctl map normal None Ctrl+Print spawn 'grim - | swappy -f -'          # Screenshot monitor to swappy
riverctl map normal None Ctrl+Alt+Print spawn 'grim - | wl-copy'          # Screenshot monitor to clipboard only
# riverctl map normal Shift+Print             exec $screenshotArea                            # Screenshot area to png file and clipboard
# riverctl map normal Nonw Ctrl+Shift+Print        exec $screenshotMonitor                         # Screenshot monitor to png file and clipboard

# Super+Period and Super+Comma to focus the next/previous output
# riverctl map normal Super Period focus-output next
# riverctl map normal Super Comma focus-output previous

# Super+Shift+{Period,Comma} to send the focused view to the next/previous output
# riverctl map normal Super+Shift Period send-to-output next
# riverctl map normal Super+Shift Comma send-to-output previous

# Super+Alt+{H,J,K,L} to move views
riverctl map normal Super+Alt H move left 100
riverctl map normal Super+Alt J move down 100
riverctl map normal Super+Alt K move up 100
riverctl map normal Super+Alt L move right 100

# Super+Alt+Control+{H,J,K,L} to snap views to screen edges
riverctl map normal Super+Alt+Control H snap left
riverctl map normal Super+Alt+Control J snap down
riverctl map normal Super+Alt+Control K snap up
riverctl map normal Super+Alt+Control L snap right

# Super+Alt+Shift+{H,J,K,L} to resize views
riverctl map normal Super+Alt+Shift H resize horizontal -100
riverctl map normal Super+Alt+Shift J resize vertical 100
riverctl map normal Super+Alt+Shift K resize vertical -100
riverctl map normal Super+Alt+Shift L resize horizontal 100

# Super + Left Mouse Button to move views
riverctl map-pointer normal Super BTN_LEFT move-view

# Super + Right Mouse Button to resize views
riverctl map-pointer normal Super BTN_RIGHT resize-view

# Super + Middle Mouse Button to toggle float
riverctl map-pointer normal Super BTN_MIDDLE toggle-float

for i in $(seq 1 9); do
  tags=$((1 << ($i - 1)))

  # Super+[1-9] to focus tag [0-8]
  riverctl map normal Super $i set-focused-tags $tags

  # Super+Shift+[1-9] to tag focused view with tag [0-8]
  riverctl map normal Super+Shift $i set-view-tags $tags

  # Super+Ctrl+[1-9] to toggle focus of tag [0-8]
  riverctl map normal Super+Control $i toggle-focused-tags $tags

  # Super+Shift+Ctrl+[1-9] to toggle tag [0-8] of focused view
  riverctl map normal Super+Shift+Control $i toggle-view-tags $tags
done

# Super+{Up,Right,Down,Left} to change layout orientation
riverctl map normal Super Up send-layout-cmd rivertile "main-location top"
riverctl map normal Super Right send-layout-cmd rivertile "main-location right"
riverctl map normal Super Down send-layout-cmd rivertile "main-location bottom"
riverctl map normal Super Left send-layout-cmd rivertile "main-location left"

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# Super+F11 to enter passthrough mode
riverctl map normal Super F11 enter-mode passthrough

# Super+F11 to return to normal mode
riverctl map passthrough Super F11 enter-mode normal

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked; do
  # Eject the optical drive (well if you still have one that is)
  riverctl map $mode None XF86Eject spawn 'eject -T'

  # Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
  riverctl map $mode None XF86AudioRaiseVolume spawn 'pamixer -i 5'
  riverctl map $mode None XF86AudioLowerVolume spawn 'pamixer -d 5'
  riverctl map $mode None XF86AudioMute spawn 'pamixer --toggle-mute'

  # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
  riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
  riverctl map $mode None XF86AudioPlay spawn 'playerctl play-pause'
  riverctl map $mode None XF86AudioPrev spawn 'playerctl previous'
  riverctl map $mode None XF86AudioNext spawn 'playerctl next'

  # Control screen backlight brightness with light (https://github.com/haikarainen/light)
  riverctl map $mode None XF86MonBrightnessUp spawn 'light -A 5'
  riverctl map $mode None XF86MonBrightnessDown spawn 'light -U 5'
done

# output
riverctl map-switch normal lid close spawn "wlr-randr --output eDP-1 --off"
riverctl map-switch normal lid open spawn "wlr-randr --output eDP-1 --on"

# set background and border color
riverctl background-color 0x002b36
riverctl border-color-focused 0x93a1a1
riverctl border-color-unfocused 0x586e75

# Set keyboard repeat rate
riverctl set-repeat 50 300

# Make certain views start floating
riverctl float-filter-add app-id float
riverctl float-filter-add title "popup title with spaces"

# Set app-ids and titles of views which should use client side decorations
riverctl csd-filter-add app-id "gedit"

# Set the default layout generator to be rivertile and start it.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout rivertile
rivertile -view-padding 4 -outer-padding 4 &
